import streamlit as st
import numpy as np
import joblib

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –º–∞—Å—à—Ç–∞–±–∞—Ç–æ—Ä–∞
model = joblib.load("model.pkl")
scaler = joblib.load("scaler.pkl")

st.set_page_config(page_title="Calories Burnt Predictor", layout="centered")
st.title("üî• –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å–æ–∂–∂—ë–Ω–Ω—ã—Ö –∫–∞–ª–æ—Ä–∏–π")

# –ü–æ–ª
gender = st.radio("–ü–æ–ª", ["–ú—É–∂—Å–∫–æ–π", "–ñ–µ–Ω—Å–∫–∏–π"])
gender_code = 0 if gender == "–ú—É–∂—Å–∫–æ–π" else 1

# –í–æ–∑—Ä–∞—Å—Ç
st.subheader("–í–æ–∑—Ä–∞—Å—Ç")
age = st.number_input("–í–≤–µ–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç", min_value=1, max_value=130, value=25)
col1, col2 = st.columns(2)
with col1:
    st.markdown("<div style='text-align: left;'><b>1</b></div>", unsafe_allow_html=True)
with col2:
    st.markdown("<div style='text-align: right;'><b>130</b></div>", unsafe_allow_html=True)
st.progress((age - 1) / (130 - 1))

# –†–æ—Å—Ç
st.subheader("–†–æ—Å—Ç (—Å–º)")
height = st.number_input("–í–≤–µ–¥–∏—Ç–µ —Ä–æ—Å—Ç", min_value=60, max_value=250, value=170)
col1, col2 = st.columns(2)
with col1:
    st.markdown("<div style='text-align: left;'><b>60</b></div>", unsafe_allow_html=True)
with col2:
    st.markdown("<div style='text-align: right;'><b>250</b></div>", unsafe_allow_html=True)
st.progress((height - 60) / (250 - 60))

# –í–µ—Å
st.subheader("–í–µ—Å (–∫–≥)")
weight = st.number_input("–í–≤–µ–¥–∏—Ç–µ –≤–µ—Å", min_value=30, max_value=200, value=70)
col1, col2 = st.columns(2)
with col1:
    st.markdown("<div style='text-align: left;'><b>30</b></div>", unsafe_allow_html=True)
with col2:
    st.markdown("<div style='text-align: right;'><b>200</b></div>", unsafe_allow_html=True)
st.progress((weight - 30) / (200 - 30))

# –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏
st.subheader("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ (–º–∏–Ω)")
duration = st.number_input("–í–≤–µ–¥–∏—Ç–µ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å", min_value=1, max_value=300, value=30)
col1, col2 = st.columns(2)
with col1:
    st.markdown("<div style='text-align: left;'><b>1</b></div>", unsafe_allow_html=True)
with col2:
    st.markdown("<div style='text-align: right;'><b>300</b></div>", unsafe_allow_html=True)
st.progress((duration - 1) / (300 - 1))

# –ü—É–ª—å—Å
st.subheader("–ü—É–ª—å—Å (—É–¥/–º–∏–Ω)")
heart_rate = st.number_input("–í–≤–µ–¥–∏—Ç–µ –ø—É–ª—å—Å", min_value=50, max_value=220, value=120)
col1, col2 = st.columns(2)
with col1:
    st.markdown("<div style='text-align: left;'><b>50</b></div>", unsafe_allow_html=True)
with col2:
    st.markdown("<div style='text-align: right;'><b>220</b></div>", unsafe_allow_html=True)
st.progress((heart_rate - 50) / (220 - 50))

# –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
st.subheader("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ —Ç–µ–ª–∞ (¬∞C)")
body_temp = st.number_input("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É", min_value=35.0, max_value=40.0, value=37.0, step=0.1)
col1, col2 = st.columns(2)
with col1:
    st.markdown("<div style='text-align: left;'><b>35.0</b></div>", unsafe_allow_html=True)
with col2:
    st.markdown("<div style='text-align: right;'><b>40.0</b></div>", unsafe_allow_html=True)
st.progress((body_temp - 35.0) / (40.0 - 35.0))

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
input_data = np.array([[gender_code, age, height, weight, duration, heart_rate, body_temp]])
scaled_input = scaler.transform(input_data)

if st.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"):
    calories = model.predict(scaled_input)[0]
    st.success(f"–í—ã —Å–æ–∂–≥–ª–∏ –ø—Ä–∏–º–µ—Ä–Ω–æ: {calories:.2f} –∫–∫–∞–ª")streamlit run app.py
